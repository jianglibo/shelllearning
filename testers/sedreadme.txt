
行的选择：
1、数字，sed将所有的行都计数，除非指定了-i或者-s参数。行数从1开始。

sed 1,5p

2、步进，从开始出步进

sed 1~2p

3、最后一行$

4、regex选择器，

sed /abc/p
sed /abc/,/edf/p

变形：\%regex%

/regexp/I 忽略大小写
/regexp/M 多行匹配

如果没有匹配项，匹配全部
如果只给出一个匹配项，那么仅选择该匹配项
给出两个，选择从第一个匹配行到后一个匹配行的范围，包括匹配本身。

如果第一个匹配，下一个将从接下来一行开始匹配，也就是说两个同时匹配一行的话，第一个先匹配。

5、其它匹配
1,+5 从第一行开始，连带后面的5行
1,~5 从第一行开始，选择后面凡是5的倍数的行

命令：
d，删除pattern space
p，打印出pattern space
{command}

s命令：
s命令和前面的address select不同，不需要\去转变分隔符。她看起来更像是一个独立的，
s/abc/xxx/g 全部替换
s/abc/xxx/1 替换第一个匹配
s/abc/xxx/p 打印出来
s/abc/xxx/im，忽略大小写和多行匹配

字符替换：y/source-chars/dest-chars/ ，source和dest必须一样长。

function 有底下這些咚咚：
a   ：新增， a 的後面可以接字串，而這些字串會在新的一行出現(目前的下一行)～
c   ：取代， c 的後面可以接字串，這些字串可以取代 n1,n2 之間的行！
d   ：刪除，因為是刪除啊，所以 d 後面通常不接任何咚咚；
i   ：插入， i 的後面可以接字串，而這些字串會在新的一行出現(目前的上一行)；
p   ：列印，亦即將某個選擇的資料印出。通常 p 會與參數 sed -n 一起運作～
s   ：取代，可以直接進行取代的工作哩！通常這個 s 的動作可以搭配
      正規表示法！例如 1,20s/old/new/g 就是啦！

nl /etc/passwd | sed '2a Drink tea or ......\